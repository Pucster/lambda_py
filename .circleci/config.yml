version: 2
jobs:
  build:
    working_directory: ~
    # /lambda_py
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      # - add_ssh_keys:
      #     fingerprints:
      #       - "d5:ad:14:d7:65:c7:53:29:68:c4:6f:56:eb:ae:06:4c"
      # - run:
      #     name: stupid
      #     command: echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
      - run:
          name: checkout TF stuff
          command: |
            # cat << EOF >> ~/.gitconfig
            # [user]
            # name = Eugen Cocalea
            # email = eugen.cocalea@gmail.com
            # EOF
            # cat << EOF >> ~/.ssh/config
            # Host github.com
            #   HostName github.com
            #   User eugen.cocalea@gmail.com
            #   IdentityFile ~/.ssh/id_rsa
            # EOF
            # cat ~/.ssh/id_rsa
            # cat ~/.gitconfig
            # ssh-add ~/.ssh/id_rsa
            git config --list
            set -e
            pwd
            mkdir ~/t
            cd ~/t
            pwd
            if [ -e ~/t/.git ]
            then
              cd ~/t
              git remote set-url origin "$infra_repo" || true
            else
              mkdir -p ~/t
              cd ~/t
              git config --list
              # GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -F /dev/null -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
              echo $dudukey >~/.ssh/dudukey
              chmod 400 ~/.ssh/dudukey
              git config --global core.sshCommand 'ssh -i ~/.ssh/dudukey'
              # git config --list
              # echo init
              # git init .
              # git remote add origin $infra_repo
              git config --list
              # # ssh -T git@github.com
              # git pull
              git clone "$infra_repo" .
            fi
            export GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -F /dev/null -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
            echo $GIT_SSH_COMMAND
            git config --list
            cat ~/.ssh/dudukey
            ls -al ~/.ssh/
            echo Checking out $infra_repo
            git clone "$infra_repo"
      - run:
          name: test
          command: echo "that's it"

      - deploy:
          name: 'Deploy code'
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Will deploy to aws"
            fi
